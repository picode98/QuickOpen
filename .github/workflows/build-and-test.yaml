name: "Build and Test"
on:
    push:
        branches:
            - main
permissions:
    contents: read
    checks: write
    pull-requests: write
jobs:
    build:
        name: "Project Build and Test Job"
        strategy:
            fail-fast: false
            matrix:
                os: [windows-2019, ubuntu-20.04]
                include:
                    - os: windows-2019
                      vcpkg_target_triplet: x64-windows
                      artifact_name: "QuickOpen Windows Binaries (x64)"
                    - os: ubuntu-20.04
                      vcpkg_target_triplet: x64-linux
                      artifact_name: "QuickOpen Linux Binaries (x64)"
        runs-on: ${{ matrix.os }}
        steps:
            - uses: actions/checkout@v2
              with:
                submodules: true
            # Install latest CMake.
            - uses: lukka/get-cmake@latest
                # Restore from cache the previously built ports. If cache-miss, download and build vcpkg (aka "bootstrap vcpkg").
            - name: Restore from cache and install vcpkg
              # Download and build vcpkg, without installing any port. If content is cached already, it is a no-op.
              uses: lukka/run-vcpkg@v7
              with:
                setupOnly: true
            - name: Install dependency packages
              env:
                JOB_OS: ${{ matrix.os }}
                VCPKG_TARGET_TRIPLET: ${{ matrix.vcpkg_target_triplet }}
              run: |
                if([ "$JOB_OS" = "ubuntu-20.04" ]); then
                    sudo apt-get install -y libgtk-3-dev
                fi
              shell: bash
            - name: Archive dependency build logs
              uses: actions/upload-artifact@v2
              if: always()
              with:
                name: "${{ matrix.os }} dependency build logs"
                path: vcpkg/buildtrees/**/*.log
            - name: Configure and build CMake project
              env:
                JOB_OS: ${{ matrix.os }}
                VCPKG_TARGET_TRIPLET: ${{ matrix.vcpkg_target_triplet }}
              run: |
                cmake . $([[ "$JOB_OS" == *"windows"* ]] && printf %s "-Ax64") -DVCPKG_TARGET_TRIPLET=$VCPKG_TARGET_TRIPLET -DCMAKE_BUILD_TYPE=Release "-DCMAKE_TOOLCHAIN_FILE=$VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake" && cmake --build . --config Release --target package
              shell: bash
            - run: |
                unzip pkg/QuickOpen*.zip -d ./test_install
                sleep 10
                ./test_install/QuickOpen*/bin/test_driver -r junit -o testing_results.xml
              shell: bash
            - name: Publish Test Results
              uses: EnricoMi/publish-unit-test-result-action/composite@v1
              if: success() || failure()
              with:
                files: testing_results.xml
                check_name: "Test Results (${{ matrix.os }})"
            - name: Archive built binaries
              uses: actions/upload-artifact@v2
              if: success() || failure()
              with:
                name: ${{ matrix.artifact_name }}
                path: pkg/QuickOpen*
